1. 기본키(Primary Key) - PK
  - 기본키역시 기본적인 제약조건들은 테이블을 생성할 때 같이 정의한다.
  - 테이블당 하나만 정의 가능하다. (두개 이상의 PK는 조합키/복합키 하고 불린다.
				묶어서 하나로 본다.)
  - PK는 NOT NULL + UNIQUE의 기능을 가지고 있다.
  - 자동으로 INDEX가 생성이되는데 이는 검색 키로서 검색 속도를 향상시킨다.
  - 주키 / 기본키 / 식별자 / PK  등으로 불리고 있다.

  1-1. pk 선언방법

	create table tetTable(
		col1	varchar2(10)  primary key,

		col2	varchar2(10)  constraint pk 제약조건이름 primary key,

		col3	varchar2(10),
		constraint pk이름 primary key(col3)s

	);

	alter table 테이블명 add constraint 제약조건명 primary key(컬럼명);



2. Foreign Key (외래키)
  - 외부키, 외래키, 참조키, 외부, 식별자, FK로 불린다.
  - FK가 정의된 케이블은 자식 테이블이라 칭한다.
  - 참조되는 테이블, 즉 PK가 있는 테이블을 부모 테이블 이라 한다.
  - 부모테이블의 PK컬럼에 존재하는 데이터만 자식테이블에 입력할 수 있다.
  - 부모테이블은 자식의 데이터나 테이블이 삭제된다고 영향을 받지 않는다.
  - 참조하는 데이터 컬럼과 데이터 타입이 반드시 일치해야 한다.
  - 참조할수 있는 커럼은 기본키(PK)이거나, UNIQUE만 가능하다. ( 보통 PK랑 엮는다. )


  2-1. FK 선언
	create table pTable(
		pPK	number(10)	primary key
	);

	create table cTable(
		pPK	number(10),
		Col1	varchar2(10).
		constraints fk_code foreign key(pPK)
			references pTable(pPK) on delete cascade
	);

	constraints [제약조건 명] foreign key([컬럼명])
			references [참조할 테이블] ([참조할 컬럼])
			[on delete cascade || on delete set null]


	-- 테이블 생성 후 설정
	alter table [테이블 명]
	add constraints [외래키 이름] foreign key ([참조컬럼])
	references [참조 테이블명] ([참조컬럼])


  2-2. 외래키 삭제
    - on delete cascade
	-> 참조되는 부모테이블의 행에 대함 delete를 허용한다.
	즉, 참조되는 부모 테이블 값이 삭제되면 연쇄적으로 자식테이블 값 역시 삭제된다.

    - on delete set null
	-> 참조되는 부모 테이블의 행에 대한 delete를 허용한다.
	이건 cascade와 다르게 부모 값이 삭제 됨녀 해당 참조하는 자식 테이블의 
	값들은 NULL 값으로 설정된다.
































