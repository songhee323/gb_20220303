DBMS
1. hr 계정의 EMPLOYEES 테이블과  동일한 컬럼과 데이터를 갖는 (테이블 복사)EMPLOYEES_NEW 테이블을 생성하는 SQL문을 작성하시오.

( 구현된 인터페이스 명세서를 참조하여 구현 검증에 필요한 감시 및 도구를 준비할 수 있다.)(5)

 

2. hr 계정의 DEPARTMENTS 테이블과  동일한 컬럼과 데이터를 갖는(테이블 복사) DEPARTMENTS_NEW 테이블을 생성하는 SQL문을 작성하시오.

( 인터페이스 구현 검증을 위하여 외부 시스템과의 연계 모듈 상태를 확인할 수 있다.)(5)

 

3. EMPLOYEES_NEW 테이블에 가변길이 문자형 데이터타입인 USER_NAME 컬럼(문자 길이는 자유)을 추가하시오.

( 개발하고자 하는 응용소프트웨어와 연계 대상 모듈 간의 세부 설계서를 확인하여 일관되고 정형화된 인터페이스 기능 구현을 정의할 수 있다..)(5)

 

4. EMPLOYEES_NEW 테이블 EMPLOYEE_ID 컬럼에 Primary Key 제약조건(제약조건이름 자유)을 추가한다.

( 개발하고자 하는 응용소프트웨어와 연계 대상 내외부 모듈 간의 연계 목적을 고려하여 인터페이스 기능 구현 실패 시 예외처리 방안을 정의할 수 있다.)(5)

 

5. DEPARTMENTS_NEW 테이블 DEPARTMENT_ID 컬럼에 Primary Key 제약조건(제약조건이름 자유)을 추가한다.

(개발하고자 하는 응용소프트웨어와 관련된 외부 및 내부 모듈 간의 연계가 필요한 인터페이스의 기능을 식별할 수 있다.)(5)


6. EMPLOYEES_NEW 테이블의 DEPARTMENT_ID 컬럼과 DEPARTMENTS_NEW 테이블 DEPARTMENT_ID 컬럼을 EMPLOYEES_NEW 테이블이 자식 테이블, DEPARTMENTS_NEW 테이블 이 부모 테이블로 Foreign Key 제약 조건(제약조건이름 자유)을 추가한다.

( 구현된 인터페이스 명세서를 참조하여 구현 검증에 필요한 감시 및 도구를 준비할 수 있다.)(5)

 

7. EMPLOYEES_NEW 테이블과 DEPARTMENTS_NEW 테이블을 사용하여 DEPARTMENT_ID = 60인 사원의 EMPLOYEE_ID , FIRST_NAME , DEPARTMENT_ID, DEPARTMENT_NAME을 오름차순으로 조회 하시오.

(구현된 인터페이스 명세서를 참조하여 구현 검증에 필요한 감시 및 도구를 준비할 수 있다.)(5)

 

8. EMPLOYEES_NEW 테이블에서 DEPARTMENT_ID가 100인 사원들의 급여(SALARY) 평균을 구하여라.

(인터페이스 구현 검증을 위하여 외부 시스템과의 연계 모듈 상태를 확인할 수 있다.)(5) 

 

9. EMPLOYEES_NEW 테이블을 삭제 하시요.

(인터페이스 구현 검증을 위하여 외부 시스템과의 연계 모듈 상태를 확인할 수 있다.)(5)

 

10. DEPARTMENTS_NEW 테이블을 삭제 하시요.

(인터페이스 오류처리 사항을 확인하고 보고서를 작성할 수 있다.)(5)

 

11. EMPLOYEES 테이블과 DEPARTMENTS 테이블을 사용하여 ‘Sales’ 부서이름에 속한 직원의 이름(FIRST_NAME), 급여(SALARY), 부서이름(DEPARTMENT_NAME)을 조회하시오. 단, 급여는 100번 부서의 평균보다 적게 받는 직원 정보만 출력되어야 한다.(총 16건)

( 인터페이스 오류처리 사항을 확인하고 보고서를 작성할 수 있다.)(5)

 

12. EMPLOYEES 테이블과 DEPARTMENTS테이블을 사용하여, 커미션(COMMISSION_PCT)을 받는 사원의 이름(FIRST_NAME), 직업(JOB_ID), 부서번호(DEPARTMENT_ID),부서명(DEPARTMENT_NAME)을 출력하라.(총 35건)

(개발하고자 하는 응용소프트웨어와 연계 대상 모듈 간의 세부 설계서를 확인하여 공통적인 인터페이스를 구현할 수 있다.)(5)

 

13. EMPLOYEES 테이블에서 사원번호가(EMPLOYEE_ID) 123인 사원의 직업(JOB_ID)과 같고 , 사원번호(EMPLOYEE_ID)가 192인 사원의 급여(SALARY)보다 많은 사원의 사원번호(EMPLOYEE_ID),이름(FIRST_NAME),직업(JOB_ID),급여(SALARY)를 출력하라.(총 5건)

(개발하고자 하는 응용소프트웨어와 연계 대상 모듈 간의 세부 설계서를 확인하여 공통적인 인터페이스를 구현할 수 있다.)(5)

 

14. 학생 관리를 위한 다음 조건을 만족시키는 STUDENT 테이블을 생성하여라.

(조건(컬럼명 자유) :

아이디(숫자-정수3자리,Primary Key), 

이름(문자-가변 문자 10자리,Not Null), 

전화번호(숫자-정수11자리,Not Null), 

주소(문자-가변 문자 100자리), 

과목수(숫자-정수1자리)

)

(응용소프트웨어와 관련된 내외부 모듈 간의 연계 데이터의 중요성을 고려하여 인터페이스 보안 기능을 적용할 수 있다.)(20)

 

15. STUDENT 테이블의 이름 컬럼에 UNIQUE INDEX를 설정 하세요.

( 응용소프트웨어와 관련된 내외부 모듈 간의 연계 데이터의 중요성을 고려하여 인터페이스 보안 기능을 적용할 수 있다.)(5)

 

16. STUDENT 테이블에 임의의 데이터 10건을 입력하여라.

(개발하고자 하는 응용소프트웨어와 관련된 외부 및 내부 모듈 간의 연계가 필요한 인터페이스의 기능을 식별할 수 있다.)(5)

 

17. STUDENT 테이블의 이름 컬럼에 UNIQUE INDEX를 삭제 하세요.

(개발하고자 하는 응용소프트웨어와 관련된 외부 및 내부 모듈 간의 연계가 필요한 인터페이스의 기능을 식별할 수 있다.)(5)